services:

  mailpit:
    image: axllent/mailpit
    ports:
      - 8025:8025
      - 1025:1025
    profiles:
      - development
    networks:
      - web

  db:
    image: postgres:15.8
    restart: always
    container_name: latitude-llm-db
    ports:
      - '5432:5432'
    env_file:
      - .env
    volumes:
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./docker/pgdata:/var/lib/postgresql/data
    networks:
      - web

  redis:
    image: redis
    restart: always
    container_name: latitude-llm-redis
    ports:
      - '6379:6379'
    networks:
      - web

  web:
    image: ghcr.io/latitude-dev/web:latest
    restart: always
    container_name: latitude-llm-web
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - shared-storage:/app/storage/files:rw
      - shared-storage:/app/apps/web/public/files:rw
    environment:
      - NEXT_SERVER_ACTIONS_ENCRYPTION_KEY=${NEXT_SERVER_ACTIONS_ENCRYPTION_KEY}
    build:
      args:
        - NEXT_SERVER_ACTIONS_ENCRYPTION_KEY=${NEXT_SERVER_ACTIONS_ENCRYPTION_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.services.web-service.loadbalancer.server.port=8080"
      - "traefik.http.routers.web-http.entrypoints=http"
      - "traefik.http.routers.web-http.service=web-service"
      - "traefik.http.routers.web-http.rule=Host(`app-latitude.${APP_DOMAIN}`)"
      - "traefik.http.routers.web-https.tls.certresolver=letsencryptresolver"
      - "traefik.http.middlewares.web-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.web-http.middlewares=web-redirect"
      - "traefik.http.routers.web-https.entrypoints=https"
      - "traefik.http.routers.web-https.tls=true"
      - "traefik.http.routers.web-https.rule=Host(`app-latitude.${APP_DOMAIN}`)"
      - "traefik.http.routers.web-https.service=web-service"
    depends_on:
      - db
      - redis
      - traefik
    networks:
      - web

  migrations:
    image: ghcr.io/latitude-dev/migrations:latest
    container_name: latitude-llm-migrations
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - shared-storage:/app/storage/files:rw
      - shared-storage:/app/apps/web/public/files:rw
    labels:
      - "traefik.enable=false"
    depends_on:
      - db
    networks:
      - web

  gateway:
    image: ghcr.io/latitude-dev/gateway:latest
    restart: always
    container_name: latitude-llm-gateway
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - shared-storage:/app/storage/files:rw
      - shared-storage:/app/apps/web/public/files:rw
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.services.gateway-service.loadbalancer.server.port=8080"
      - "traefik.http.routers.gateway-http.entrypoints=http"
      - "traefik.http.routers.gateway-http.service=gateway-service"
      - "traefik.http.routers.gateway-http.rule=Host(`gateway-latitude.${APP_DOMAIN}`)"
      - "traefik.http.routers.gateway-https.tls.certresolver=letsencryptresolver"
      - "traefik.http.middlewares.gateway-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.gateway-http.middlewares=gateway-redirect"
      - "traefik.http.routers.gateway-https.entrypoints=https"
      - "traefik.http.routers.gateway-https.tls=true"
      - "traefik.http.routers.gateway-https.rule=Host(`gateway-latitude.${APP_DOMAIN}`)"
      - "traefik.http.routers.gateway-https.service=gateway-service"
    depends_on:
      - db
      - redis
    networks:
      - web

  workers:
    image: ghcr.io/latitude-dev/workers:latest
    restart: always
    container_name: latitude-llm-workers
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - shared-storage:/app/storage/files:rw
      - shared-storage:/app/apps/web/public/files:rw
    depends_on:
      - db
      - redis
    networks:
      - web

  websockets:
    image: ghcr.io/latitude-dev/websockets:latest
    restart: always
    container_name: latitude-llm-websockets
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - shared-storage:/app/storage/files:rw
      - shared-storage:/app/apps/web/public/files:rw
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.services.websockets-service.loadbalancer.server.port=4002"
      - "traefik.http.routers.websockets-http.entrypoints=http"
      - "traefik.http.routers.websockets-http.service=websockets-service"
      - "traefik.http.routers.websockets-http.rule=Host(`ws-latitude.${APP_DOMAIN}`)"
      - "traefik.http.routers.websockets-https.tls.certresolver=letsencryptresolver"
      - "traefik.http.middlewares.websockets-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.websockets-http.middlewares=websockets-redirect"
      - "traefik.http.routers.websockets-https.entrypoints=https"
      - "traefik.http.routers.websockets-https.tls=true"
      - "traefik.http.routers.websockets-https.rule=Host(`ws-latitude.${APP_DOMAIN}`)"
      - "traefik.http.routers.websockets-https.service=websockets-service"
    depends_on:
      - db
      - redis
    networks:
      - web

# You need to create external network for Traefik to work (docker network create web)
networks:
  web:
    external: true

volumes:
  shared-storage: